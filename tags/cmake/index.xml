<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cmake on Matt's Homepage</title><link>https://mgibson.ca/tags/cmake/</link><description>Recent content in Cmake on Matt's Homepage</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 09 May 2024 23:43:01 +0000</lastBuildDate><atom:link href="https://mgibson.ca/tags/cmake/index.xml" rel="self" type="application/rss+xml"/><item><title>My 2024 C++ workflow using Modern CMake and Vcpkg</title><link>https://mgibson.ca/posts/my-2024-c-workflow-using-modern-cmake-and-vcpkg/</link><pubDate>Thu, 09 May 2024 23:43:01 +0000</pubDate><guid>https://mgibson.ca/posts/my-2024-c-workflow-using-modern-cmake-and-vcpkg/</guid><description>Setting up and maintaining a C++ development environment has always been more difficult than for newer languages, especially once third party dependencies are involved, but in the last few years the ecosystem has improved to the point where it&amp;rsquo;s possible to create a project that can bootstrap a cross-platform development environment just by opening it with an editor that supports cmake or with a single command in the terminal.</description></item><item><title>Simplify your C++ development environment using CMakePresets.json</title><link>https://mgibson.ca/posts/simplify-your-c-development-environment-using-cmakepresets-json/</link><pubDate>Fri, 16 Sep 2022 13:49:10 +0000</pubDate><guid>https://mgibson.ca/posts/simplify-your-c-development-environment-using-cmakepresets-json/</guid><description>CMake is a cross-platform utility that abstracts your C++ projects across a wide array of operating systems, compiler toolchains, and build tools. While supported by popular editors such as Visual Studio, VSCode, and CLion, there hasnâ€™t been any way to specify build variants and toolchain options in a cross-editor fashion.</description></item></channel></rss>